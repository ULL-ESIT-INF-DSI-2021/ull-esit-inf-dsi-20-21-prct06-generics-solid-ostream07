{"/home/usuario/DSI/practica6/ull-esit-inf-dsi-20-21-prct06-generics-solid-ostream07/exercises/src/exercise2/distance.ts":{"path":"/home/usuario/DSI/practica6/ull-esit-inf-dsi-20-21-prct06-generics-solid-ostream07/exercises/src/exercise2/distance.ts","statementMap":{"0":{"start":{"line":2,"column":0},"end":{"line":2,"column":62}},"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":50}},"2":{"start":{"line":15,"column":0},"end":{"line":24,"column":74}},"3":{"start":{"line":16,"column":4},"end":{"line":16,"column":54}},"4":{"start":{"line":17,"column":4},"end":{"line":17,"column":53}},"5":{"start":{"line":18,"column":4},"end":{"line":18,"column":52}},"6":{"start":{"line":19,"column":4},"end":{"line":19,"column":48}},"7":{"start":{"line":20,"column":4},"end":{"line":20,"column":53}},"8":{"start":{"line":21,"column":4},"end":{"line":21,"column":52}},"9":{"start":{"line":22,"column":4},"end":{"line":22,"column":53}},"10":{"start":{"line":23,"column":4},"end":{"line":23,"column":66}},"11":{"start":{"line":36,"column":22},"end":{"line":36,"column":29}},"12":{"start":{"line":37,"column":21},"end":{"line":37,"column":22}},"13":{"start":{"line":38,"column":8},"end":{"line":50,"column":9}},"14":{"start":{"line":39,"column":12},"end":{"line":39,"column":37}},"15":{"start":{"line":40,"column":12},"end":{"line":40,"column":26}},"16":{"start":{"line":42,"column":13},"end":{"line":50,"column":9}},"17":{"start":{"line":43,"column":12},"end":{"line":43,"column":29}},"18":{"start":{"line":44,"column":12},"end":{"line":44,"column":26}},"19":{"start":{"line":47,"column":12},"end":{"line":48,"column":47}},"20":{"start":{"line":49,"column":12},"end":{"line":49,"column":22}},"21":{"start":{"line":53,"column":0},"end":{"line":53,"column":28}},"22":{"start":{"line":54,"column":18},"end":{"line":54,"column":32}},"23":{"start":{"line":55,"column":0},"end":{"line":55,"column":62}},"24":{"start":{"line":56,"column":0},"end":{"line":56,"column":30}},"25":{"start":{"line":57,"column":0},"end":{"line":58,"column":41}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":15,"column":1},"end":{"line":15,"column":2}},"loc":{"start":{"line":15,"column":26},"end":{"line":24,"column":1}},"line":15},"1":{"name":"(anonymous_1)","decl":{"start":{"line":34,"column":4},"end":{"line":34,"column":5}},"loc":{"start":{"line":34,"column":18},"end":{"line":34,"column":21}},"line":34},"2":{"name":"(anonymous_2)","decl":{"start":{"line":35,"column":4},"end":{"line":35,"column":5}},"loc":{"start":{"line":35,"column":21},"end":{"line":51,"column":5}},"line":35}},"branchMap":{"0":{"loc":{"start":{"line":24,"column":19},"end":{"line":24,"column":72}},"type":"binary-expr","locations":[{"start":{"line":24,"column":19},"end":{"line":24,"column":40}},{"start":{"line":24,"column":45},"end":{"line":24,"column":71}}],"line":24},"1":{"loc":{"start":{"line":38,"column":8},"end":{"line":50,"column":9}},"type":"if","locations":[{"start":{"line":38,"column":8},"end":{"line":50,"column":9}},{"start":{"line":38,"column":8},"end":{"line":50,"column":9}}],"line":38},"2":{"loc":{"start":{"line":38,"column":12},"end":{"line":38,"column":80}},"type":"binary-expr","locations":[{"start":{"line":38,"column":12},"end":{"line":38,"column":29}},{"start":{"line":38,"column":33},"end":{"line":38,"column":50}},{"start":{"line":38,"column":54},"end":{"line":38,"column":80}}],"line":38},"3":{"loc":{"start":{"line":42,"column":13},"end":{"line":50,"column":9}},"type":"if","locations":[{"start":{"line":42,"column":13},"end":{"line":50,"column":9}},{"start":{"line":42,"column":13},"end":{"line":50,"column":9}}],"line":42}},"s":{"0":1,"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":1,"9":1,"10":1,"11":6,"12":6,"13":6,"14":5,"15":5,"16":1,"17":0,"18":0,"19":1,"20":1,"21":1,"22":1,"23":1,"24":1,"25":1},"f":{"0":1,"1":4,"2":6},"b":{"0":[1,1],"1":[5,1],"2":[6,5,5],"3":[0,1]},"inputSourceMap":{"version":3,"file":"/home/usuario/DSI/practica6/ull-esit-inf-dsi-20-21-prct06-generics-solid-ostream07/exercises/src/exercise2/distance.ts","sources":["/home/usuario/DSI/practica6/ull-esit-inf-dsi-20-21-prct06-generics-solid-ostream07/exercises/src/exercise2/distance.ts"],"names":[],"mappings":";;;AAKA;;;;;;;;;GASG;AACH,IAAY,aASX;AATD,WAAY,aAAa;IACvB,iDAAU,CAAA;IACV,gDAAS,CAAA;IACT,+CAAQ,CAAA;IACR,2CAAK,CAAA;IACL,gDAAQ,CAAA;IACR,+CAAQ,CAAA;IACR,gDAAS,CAAA;IACT,6DAAmB,CAAA;AACrB,CAAC,EATW,aAAa,GAAb,qBAAa,KAAb,qBAAa,QASxB;AAAA,CAAC;AAEF;;;;;;GAMG;AACH,MAAa,QAAQ;IACnB,gBAAe,CAAC;IAChB,UAAU,CAAC,IAA4C;QACrD,MAAM,KAAK,GAAW,IAAI,CAAC,CAAC,CAAC,CAAC;QAC9B,IAAI,MAAM,GAAW,CAAC,CAAC;QACvB,IAAI,IAAI,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,CAAC,CAAC,IAAI,IAAI,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,CAAC,CAAC,IAAI,IAAI,CAAC,CAAC,CAAC,IAAI,aAAa,CAAC,CAAC,EAAE;YACxE,MAAM,GAAG,IAAI,CAAC,CAAC,CAAC,GAAG,KAAK,CAAC;YACzB,OAAO,MAAM,CAAC;SACf;aAAM,IAAI,IAAI,CAAC,CAAC,CAAC,IAAI,IAAI,CAAC,CAAC,CAAC,EAAE;YAC7B,MAAM,GAAG,IAAI,CAAC,CAAC,CAAC,CAAC;YACjB,OAAO,MAAM,CAAC;SACf;aAAM;YACL,OAAO,CAAC,GAAG,CAAC,+CAA+C;gBACrB,6BAA6B,CAAC,CAAC;YACrE,OAAO,CAAC,CAAC,CAAC;SACX;IACH,CAAC;CACF;AAjBD,4BAiBC;AAED,MAAM,SAAS,GAAG,IAAI,QAAQ,EAAE,CAAC;AACjC,SAAS,CAAC,UAAU,CAAC,CAAC,aAAa,CAAC,EAAE,EAAE,EAAE,EAAE,aAAa,CAAC,CAAC,CAAC,CAAC,CAAC;AAC9D,OAAO,CAAC,GAAG,CAAC,gBAAgB,CAAC,CAAC;AAC9B,OAAO,CAAC,GAAG,CAAC,mBAAmB,GAAG,SAAS,CAAC,UAAU,CAAC,CAAC,aAAa,CAAC,EAAE;IACpD,EAAE,EAAE,aAAa,CAAC,CAAC,CAAC,CAAC,GAAG,WAAW,CAAC,CAAC","sourcesContent":["/* eslint-disable no-unused-vars */\n/* eslint-disable indent */\n/* eslint-disable max-len */\nimport {isConvertible} from './isConvertible';\n\n/**\n * @param mm milímetros\n * @param cm centímetros\n * @param dm decímetros\n * @param m metros\n * @param dam decámetros\n * @param hm hectómetros\n * @param km kilómetros\n * @param milla millas\n */\nexport enum DistanceUnits {\n  mm = 0.001,\n  cm = 0.01,\n  dm = 0.1,\n  m = 1,\n  dam = 10,\n  hm = 100,\n  km = 1000,\n  milla = 0.000621371\n};\n\n/**\n * @class Distancia.\n * @param Recibe un dato tipo T como vector con tres valores, dos unidades\n * de longitud y un valor\n * @function conversion Convierte el valor de la primera unidad en lo\n * corespondiente a la segunda que siempre serán metros\n */\nexport class Distance implements isConvertible<[DistanceUnits, number, DistanceUnits]> {\n  constructor() {}\n  conversion(data: [DistanceUnits, number, DistanceUnits]): number {\n    const value: number = data[1];\n    let result: number = 0;\n    if (data[0] < data[2] || data[0] > data[2] && data[2] == DistanceUnits.m) {\n      result = data[0] * value;\n      return result;\n    } else if (data[0] == data[2]) {\n      result = data[2];\n      return result;\n    } else {\n      console.log('Error, conversor a metros y no se especifican' +\n                                            ' metros en ningún parámetro');\n      return -1;\n    }\n  }\n}\n\nconst distances = new Distance();\ndistances.conversion([DistanceUnits.km, 15, DistanceUnits.m]);\nconsole.log('Kilometros: 15');\nconsole.log('El resultado es: ' + distances.conversion([DistanceUnits.km,\n                    15, DistanceUnits.m]) + ' metros\\n');\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"8b66f7a5be203b24377905ac6a7515f4351ebee8","contentHash":"e70d1e3be76ec27e1a954e57fcfa2b6c624c14a42cabe1619d0ebeae3889e8aa"},"/home/usuario/DSI/practica6/ull-esit-inf-dsi-20-21-prct06-generics-solid-ostream07/exercises/src/exercise2/temperature.ts":{"path":"/home/usuario/DSI/practica6/ull-esit-inf-dsi-20-21-prct06-generics-solid-ostream07/exercises/src/exercise2/temperature.ts","statementMap":{"0":{"start":{"line":2,"column":0},"end":{"line":2,"column":62}},"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":56}},"2":{"start":{"line":10,"column":0},"end":{"line":14,"column":83}},"3":{"start":{"line":11,"column":4},"end":{"line":11,"column":66}},"4":{"start":{"line":12,"column":4},"end":{"line":12,"column":72}},"5":{"start":{"line":13,"column":4},"end":{"line":13,"column":64}},"6":{"start":{"line":26,"column":22},"end":{"line":26,"column":29}},"7":{"start":{"line":27,"column":21},"end":{"line":27,"column":22}},"8":{"start":{"line":28,"column":8},"end":{"line":40,"column":9}},"9":{"start":{"line":29,"column":12},"end":{"line":29,"column":33}},"10":{"start":{"line":30,"column":12},"end":{"line":30,"column":26}},"11":{"start":{"line":32,"column":13},"end":{"line":40,"column":9}},"12":{"start":{"line":33,"column":12},"end":{"line":33,"column":42}},"13":{"start":{"line":34,"column":12},"end":{"line":34,"column":26}},"14":{"start":{"line":37,"column":12},"end":{"line":38,"column":64}},"15":{"start":{"line":39,"column":12},"end":{"line":39,"column":22}},"16":{"start":{"line":43,"column":0},"end":{"line":43,"column":34}},"17":{"start":{"line":44,"column":15},"end":{"line":44,"column":32}},"18":{"start":{"line":45,"column":0},"end":{"line":45,"column":75}},"19":{"start":{"line":46,"column":0},"end":{"line":46,"column":34}},"20":{"start":{"line":47,"column":0},"end":{"line":48,"column":49}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":10,"column":1},"end":{"line":10,"column":2}},"loc":{"start":{"line":10,"column":29},"end":{"line":14,"column":1}},"line":10},"1":{"name":"(anonymous_1)","decl":{"start":{"line":24,"column":4},"end":{"line":24,"column":5}},"loc":{"start":{"line":24,"column":18},"end":{"line":24,"column":21}},"line":24},"2":{"name":"(anonymous_2)","decl":{"start":{"line":25,"column":4},"end":{"line":25,"column":5}},"loc":{"start":{"line":25,"column":21},"end":{"line":41,"column":5}},"line":25}},"branchMap":{"0":{"loc":{"start":{"line":14,"column":22},"end":{"line":14,"column":81}},"type":"binary-expr","locations":[{"start":{"line":14,"column":22},"end":{"line":14,"column":46}},{"start":{"line":14,"column":51},"end":{"line":14,"column":80}}],"line":14},"1":{"loc":{"start":{"line":28,"column":8},"end":{"line":40,"column":9}},"type":"if","locations":[{"start":{"line":28,"column":8},"end":{"line":40,"column":9}},{"start":{"line":28,"column":8},"end":{"line":40,"column":9}}],"line":28},"2":{"loc":{"start":{"line":28,"column":12},"end":{"line":28,"column":85}},"type":"binary-expr","locations":[{"start":{"line":28,"column":12},"end":{"line":28,"column":47}},{"start":{"line":28,"column":51},"end":{"line":28,"column":85}}],"line":28},"3":{"loc":{"start":{"line":32,"column":13},"end":{"line":40,"column":9}},"type":"if","locations":[{"start":{"line":32,"column":13},"end":{"line":40,"column":9}},{"start":{"line":32,"column":13},"end":{"line":40,"column":9}}],"line":32},"4":{"loc":{"start":{"line":32,"column":17},"end":{"line":32,"column":94}},"type":"binary-expr","locations":[{"start":{"line":32,"column":17},"end":{"line":32,"column":52}},{"start":{"line":32,"column":56},"end":{"line":32,"column":94}}],"line":32}},"s":{"0":1,"1":1,"2":1,"3":1,"4":1,"5":1,"6":5,"7":5,"8":5,"9":3,"10":3,"11":2,"12":1,"13":1,"14":1,"15":1,"16":1,"17":1,"18":1,"19":1,"20":1},"f":{"0":1,"1":4,"2":5},"b":{"0":[1,1],"1":[3,2],"2":[5,4],"3":[1,1],"4":[2,1]},"inputSourceMap":{"version":3,"file":"/home/usuario/DSI/practica6/ull-esit-inf-dsi-20-21-prct06-generics-solid-ostream07/exercises/src/exercise2/temperature.ts","sources":["/home/usuario/DSI/practica6/ull-esit-inf-dsi-20-21-prct06-generics-solid-ostream07/exercises/src/exercise2/temperature.ts"],"names":[],"mappings":";;;AAKA;;;;GAIG;AACH,IAAY,gBAIX;AAJD,WAAY,gBAAgB;IAC1B,6DAAO,CAAA;IACP,mEAAU,CAAA;IACV,2DAAM,CAAA;AACR,CAAC,EAJW,gBAAgB,GAAhB,wBAAgB,KAAhB,wBAAgB,QAI3B;AAAA,CAAC;AAEF;;;;;;GAMG;AACH,MAAa,WAAW;IACtB,gBAAe,CAAC;IAChB,UAAU,CAAC,IAAkD;QAC3D,MAAM,KAAK,GAAW,IAAI,CAAC,CAAC,CAAC,CAAC;QAC9B,IAAI,MAAM,GAAW,CAAC,CAAC;QACvB,IAAI,IAAI,CAAC,CAAC,CAAC,IAAI,gBAAgB,CAAC,OAAO,IAAI,IAAI,CAAC,CAAC,CAAC,IAAI,gBAAgB,CAAC,MAAM,EAAE;YAC7E,MAAM,GAAG,KAAK,GAAG,GAAG,CAAC;YACrB,OAAO,MAAM,CAAC;SACf;aAAM,IAAI,IAAI,CAAC,CAAC,CAAC,IAAI,gBAAgB,CAAC,OAAO,IAAI,IAAI,CAAC,CAAC,CAAC,IAAI,gBAAgB,CAAC,UAAU,EAAE;YACxF,MAAM,GAAG,CAAC,KAAK,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,EAAE,CAAC;YAC9B,OAAO,MAAM,CAAC;SACf;aAAM;YACL,OAAO,CAAC,GAAG,CAAC,iDAAiD;gBACzC,8CAA8C,CAAC,CAAC;YACpE,OAAO,CAAC,CAAC,CAAC;SACX;IACH,CAAC;CACF;AAjBD,kCAiBC;AAED,MAAM,MAAM,GAAG,IAAI,WAAW,EAAE,CAAC;AACjC,MAAM,CAAC,UAAU,CAAC,CAAC,gBAAgB,CAAC,OAAO,EAAE,EAAE,EAAE,gBAAgB,CAAC,MAAM,CAAC,CAAC,CAAC;AAC3E,OAAO,CAAC,GAAG,CAAC,oBAAoB,CAAC,CAAC;AAClC,OAAO,CAAC,GAAG,CAAC,mBAAmB,GAAG,MAAM,CAAC,UAAU,CAAC,CAAC,gBAAgB,CAAC,OAAO;IACzD,EAAE,EAAE,gBAAgB,CAAC,MAAM,CAAC,CAAC,GAAG,WAAW,CAAC,CAAC","sourcesContent":["/* eslint-disable no-unused-vars */\n/* eslint-disable indent */\n/* eslint-disable max-len */\nimport {isConvertible} from './isConvertible';\n\n/**\n * @param celsius grados celsius\n * @param fahrenheit grados fahrenheit\n * @param kelvin grados kelvin\n */\nexport enum TemperatureUnits {\n  celsius,\n  fahrenheit,\n  kelvin,\n};\n\n/**\n * @class Temperatura.\n * @param Recibe un dato tipo T como vector con tres valores, dos unidades\n * de temperatura y un valor\n * @function conversion Convierte el valor de la primera unidad en lo\n * corespondiente a la segunda\n */\nexport class Temperature implements isConvertible<[TemperatureUnits, number, TemperatureUnits]> {\n  constructor() {}\n  conversion(data: [TemperatureUnits, number, TemperatureUnits]): number {\n    const value: number = data[1];\n    let result: number = 0;\n    if (data[0] == TemperatureUnits.celsius && data[2] == TemperatureUnits.kelvin) {\n      result = value + 273;\n      return result;\n    } else if (data[0] == TemperatureUnits.celsius && data[2] == TemperatureUnits.fahrenheit) {\n      result = (value * 9 / 5) + 32;\n      return result;\n    } else {\n      console.log('Error, conversor de celsius a otras unidades y ' +\n                          'no se especifican metros en ningún parámetro');\n      return -1;\n    }\n  }\n}\n\nconst grades = new Temperature();\ngrades.conversion([TemperatureUnits.celsius, 15, TemperatureUnits.kelvin]);\nconsole.log('Grados celsius: 15');\nconsole.log('El resultado es: ' + grades.conversion([TemperatureUnits.celsius,\n                    15, TemperatureUnits.kelvin]) + ' kelvin\\n');\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"2abd145c9ccbe08befc5b184554a15729bd86592","contentHash":"957a7d263508e5fe79552cdf653ebf1490a0237825cf7b386eddab37ed9ad38e"},"/home/usuario/DSI/practica6/ull-esit-inf-dsi-20-21-prct06-generics-solid-ostream07/exercises/src/exercise2/time.ts":{"path":"/home/usuario/DSI/practica6/ull-esit-inf-dsi-20-21-prct06-generics-solid-ostream07/exercises/src/exercise2/time.ts","statementMap":{"0":{"start":{"line":4,"column":0},"end":{"line":4,"column":62}},"1":{"start":{"line":5,"column":0},"end":{"line":5,"column":42}},"2":{"start":{"line":7,"column":0},"end":{"line":15,"column":62}},"3":{"start":{"line":8,"column":4},"end":{"line":8,"column":44}},"4":{"start":{"line":9,"column":4},"end":{"line":9,"column":45}},"5":{"start":{"line":10,"column":4},"end":{"line":10,"column":43}},"6":{"start":{"line":11,"column":4},"end":{"line":11,"column":48}},"7":{"start":{"line":12,"column":4},"end":{"line":12,"column":51}},"8":{"start":{"line":13,"column":4},"end":{"line":13,"column":54}},"9":{"start":{"line":14,"column":4},"end":{"line":14,"column":53}},"10":{"start":{"line":20,"column":22},"end":{"line":20,"column":29}},"11":{"start":{"line":21,"column":21},"end":{"line":21,"column":22}},"12":{"start":{"line":22,"column":8},"end":{"line":33,"column":9}},"13":{"start":{"line":23,"column":12},"end":{"line":23,"column":37}},"14":{"start":{"line":24,"column":12},"end":{"line":24,"column":26}},"15":{"start":{"line":26,"column":13},"end":{"line":33,"column":9}},"16":{"start":{"line":27,"column":12},"end":{"line":27,"column":29}},"17":{"start":{"line":30,"column":12},"end":{"line":31,"column":58}},"18":{"start":{"line":32,"column":12},"end":{"line":32,"column":22}},"19":{"start":{"line":36,"column":0},"end":{"line":36,"column":20}},"20":{"start":{"line":37,"column":14},"end":{"line":37,"column":24}},"21":{"start":{"line":38,"column":0},"end":{"line":38,"column":53}},"22":{"start":{"line":39,"column":0},"end":{"line":39,"column":27}},"23":{"start":{"line":40,"column":0},"end":{"line":40,"column":104}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":7,"column":1},"end":{"line":7,"column":2}},"loc":{"start":{"line":7,"column":22},"end":{"line":15,"column":1}},"line":7},"1":{"name":"(anonymous_1)","decl":{"start":{"line":18,"column":4},"end":{"line":18,"column":5}},"loc":{"start":{"line":18,"column":18},"end":{"line":18,"column":21}},"line":18},"2":{"name":"(anonymous_2)","decl":{"start":{"line":19,"column":4},"end":{"line":19,"column":5}},"loc":{"start":{"line":19,"column":21},"end":{"line":34,"column":5}},"line":19}},"branchMap":{"0":{"loc":{"start":{"line":15,"column":15},"end":{"line":15,"column":60}},"type":"binary-expr","locations":[{"start":{"line":15,"column":15},"end":{"line":15,"column":32}},{"start":{"line":15,"column":37},"end":{"line":15,"column":59}}],"line":15},"1":{"loc":{"start":{"line":22,"column":8},"end":{"line":33,"column":9}},"type":"if","locations":[{"start":{"line":22,"column":8},"end":{"line":33,"column":9}},{"start":{"line":22,"column":8},"end":{"line":33,"column":9}}],"line":22},"2":{"loc":{"start":{"line":22,"column":12},"end":{"line":22,"column":57}},"type":"binary-expr","locations":[{"start":{"line":22,"column":12},"end":{"line":22,"column":29}},{"start":{"line":22,"column":33},"end":{"line":22,"column":57}}],"line":22},"3":{"loc":{"start":{"line":26,"column":13},"end":{"line":33,"column":9}},"type":"if","locations":[{"start":{"line":26,"column":13},"end":{"line":33,"column":9}},{"start":{"line":26,"column":13},"end":{"line":33,"column":9}}],"line":26}},"s":{"0":1,"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":1,"9":1,"10":5,"11":5,"12":5,"13":4,"14":4,"15":1,"16":0,"17":1,"18":1,"19":1,"20":1,"21":1,"22":1,"23":1},"f":{"0":1,"1":4,"2":5},"b":{"0":[1,1],"1":[4,1],"2":[5,4],"3":[0,1]},"inputSourceMap":{"version":3,"file":"/home/usuario/DSI/practica6/ull-esit-inf-dsi-20-21-prct06-generics-solid-ostream07/exercises/src/exercise2/time.ts","sources":["/home/usuario/DSI/practica6/ull-esit-inf-dsi-20-21-prct06-generics-solid-ostream07/exercises/src/exercise2/time.ts"],"names":[],"mappings":";AAAA,mCAAmC;AACnC,4BAA4B;;;AAI5B,IAAY,SASX;AATD,WAAY,SAAS;IACnB,uCAAO,CAAA;IACP,wCAAQ,CAAA;IACR,sCAAQ,CAAA;IACR,2CAAW,CAAA;IACX,8CAAa,CAAA;IACb,iDAAe,CAAA;IACf,gDAAe,CAAA;AAEjB,CAAC,EATW,SAAS,GAAT,iBAAS,KAAT,iBAAS,QASpB;AAAA,CAAC;AAEF,MAAa,IAAI;IACf,gBAAe,CAAC;IAChB,UAAU,CAAC,IAAoC;QAC7C,MAAM,KAAK,GAAW,IAAI,CAAC,CAAC,CAAC,CAAC;QAC9B,IAAI,MAAM,GAAW,CAAC,CAAC;QACvB,IAAI,IAAI,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,CAAC,CAAC,IAAI,IAAI,CAAC,CAAC,CAAC,IAAI,SAAS,CAAC,GAAG,EAAE;YACjD,MAAM,GAAG,IAAI,CAAC,CAAC,CAAC,GAAG,KAAK,CAAC;YACzB,OAAO,MAAM,CAAC;SACf;aAAM,IAAI,IAAI,CAAC,CAAC,CAAC,IAAI,IAAI,CAAC,CAAC,CAAC,EAAE;YAC7B,MAAM,GAAG,IAAI,CAAC,CAAC,CAAC,CAAC;SAClB;aAAM;YACL,OAAO,CAAC,GAAG,CAAC,6CAA6C;gBAC/C,wCAAwC,CAAC,CAAC;YACpD,OAAO,CAAC,CAAC,CAAC;SACX;IACH,CAAC;CACF;AAhBD,oBAgBC;AAED,MAAM,KAAK,GAAG,IAAI,IAAI,EAAE,CAAC;AACzB,KAAK,CAAC,UAAU,CAAC,CAAC,SAAS,CAAC,GAAG,EAAE,EAAE,EAAE,SAAS,CAAC,GAAG,CAAC,CAAC,CAAC;AACrD,OAAO,CAAC,GAAG,CAAC,aAAa,CAAC,CAAC;AAC3B,OAAO,CAAC,GAAG,CAAC,mBAAmB,GAAG,KAAK,CAAC,UAAU,CAAC,CAAC,SAAS,CAAC,GAAG,EAAE,EAAE,EAAE,SAAS,CAAC,GAAG,CAAC,CAAC,GAAG,aAAa,CAAC,CAAC","sourcesContent":["/* eslint-disable no-unused-vars */\n/* eslint-disable max-len */\n\nimport {isConvertible} from './isConvertible';\n\nexport enum TimeUnits {\n  seg = 1,\n  min = 60,\n  h = 3600,\n  day = 86400,\n  week = 604800,\n  month = 2592000,\n  year = 31104000,\n\n};\n\nexport class Time implements isConvertible<[TimeUnits, number, TimeUnits]> {\n  constructor() {}\n  conversion(data: [TimeUnits, number, TimeUnits]): number {\n    const value: number = data[1];\n    let result: number = 0;\n    if (data[0] > data[2] && data[2] == TimeUnits.seg) {\n      result = data[0] * value;\n      return result;\n    } else if (data[0] == data[2]) {\n      result = data[0];\n    } else {\n      console.log('Error, conversor a segundos, ninguno de los' +\n                ' parámetros especificados son segundos');\n      return -1;\n    }\n  }\n}\n\nconst times = new Time();\ntimes.conversion([TimeUnits.min, 15, TimeUnits.seg]);\nconsole.log('Minutos: 15');\nconsole.log('El resultado es: ' + times.conversion([TimeUnits.min, 15, TimeUnits.seg]) + ' segundos\\n');\n\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"da80e8c9a90352104b732211a77d5de08949857d","contentHash":"a1418209cc22c9a1aa715e2d8837730085201f6de3ba21bb8604a5d068ffe8c1"},"/home/usuario/DSI/practica6/ull-esit-inf-dsi-20-21-prct06-generics-solid-ostream07/exercises/src/exercise2/speed.ts":{"path":"/home/usuario/DSI/practica6/ull-esit-inf-dsi-20-21-prct06-generics-solid-ostream07/exercises/src/exercise2/speed.ts","statementMap":{"0":{"start":{"line":2,"column":0},"end":{"line":2,"column":62}},"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":44}},"2":{"start":{"line":11,"column":0},"end":{"line":16,"column":65}},"3":{"start":{"line":12,"column":4},"end":{"line":12,"column":46}},"4":{"start":{"line":13,"column":4},"end":{"line":13,"column":44}},"5":{"start":{"line":14,"column":4},"end":{"line":14,"column":44}},"6":{"start":{"line":15,"column":4},"end":{"line":15,"column":46}},"7":{"start":{"line":28,"column":22},"end":{"line":28,"column":29}},"8":{"start":{"line":29,"column":21},"end":{"line":29,"column":22}},"9":{"start":{"line":30,"column":8},"end":{"line":45,"column":9}},"10":{"start":{"line":31,"column":12},"end":{"line":31,"column":34}},"11":{"start":{"line":32,"column":12},"end":{"line":32,"column":26}},"12":{"start":{"line":34,"column":13},"end":{"line":45,"column":9}},"13":{"start":{"line":35,"column":12},"end":{"line":35,"column":37}},"14":{"start":{"line":36,"column":12},"end":{"line":36,"column":26}},"15":{"start":{"line":38,"column":13},"end":{"line":45,"column":9}},"16":{"start":{"line":39,"column":12},"end":{"line":39,"column":33}},"17":{"start":{"line":40,"column":12},"end":{"line":40,"column":26}},"18":{"start":{"line":43,"column":12},"end":{"line":43,"column":78}},"19":{"start":{"line":44,"column":12},"end":{"line":44,"column":22}},"20":{"start":{"line":48,"column":0},"end":{"line":48,"column":22}},"21":{"start":{"line":49,"column":17},"end":{"line":49,"column":28}},"22":{"start":{"line":50,"column":0},"end":{"line":50,"column":57}},"23":{"start":{"line":51,"column":0},"end":{"line":51,"column":35}},"24":{"start":{"line":52,"column":0},"end":{"line":53,"column":43}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":11,"column":1},"end":{"line":11,"column":2}},"loc":{"start":{"line":11,"column":23},"end":{"line":16,"column":1}},"line":11},"1":{"name":"(anonymous_1)","decl":{"start":{"line":26,"column":4},"end":{"line":26,"column":5}},"loc":{"start":{"line":26,"column":18},"end":{"line":26,"column":21}},"line":26},"2":{"name":"(anonymous_2)","decl":{"start":{"line":27,"column":4},"end":{"line":27,"column":5}},"loc":{"start":{"line":27,"column":21},"end":{"line":46,"column":5}},"line":27}},"branchMap":{"0":{"loc":{"start":{"line":16,"column":16},"end":{"line":16,"column":63}},"type":"binary-expr","locations":[{"start":{"line":16,"column":16},"end":{"line":16,"column":34}},{"start":{"line":16,"column":39},"end":{"line":16,"column":62}}],"line":16},"1":{"loc":{"start":{"line":30,"column":8},"end":{"line":45,"column":9}},"type":"if","locations":[{"start":{"line":30,"column":8},"end":{"line":45,"column":9}},{"start":{"line":30,"column":8},"end":{"line":45,"column":9}}],"line":30},"2":{"loc":{"start":{"line":30,"column":12},"end":{"line":30,"column":57}},"type":"binary-expr","locations":[{"start":{"line":30,"column":12},"end":{"line":30,"column":36}},{"start":{"line":30,"column":40},"end":{"line":30,"column":57}}],"line":30},"3":{"loc":{"start":{"line":34,"column":13},"end":{"line":45,"column":9}},"type":"if","locations":[{"start":{"line":34,"column":13},"end":{"line":45,"column":9}},{"start":{"line":34,"column":13},"end":{"line":45,"column":9}}],"line":34},"4":{"loc":{"start":{"line":34,"column":17},"end":{"line":34,"column":69}},"type":"binary-expr","locations":[{"start":{"line":34,"column":17},"end":{"line":34,"column":41}},{"start":{"line":34,"column":45},"end":{"line":34,"column":69}}],"line":34},"5":{"loc":{"start":{"line":38,"column":13},"end":{"line":45,"column":9}},"type":"if","locations":[{"start":{"line":38,"column":13},"end":{"line":45,"column":9}},{"start":{"line":38,"column":13},"end":{"line":45,"column":9}}],"line":38},"6":{"loc":{"start":{"line":38,"column":17},"end":{"line":38,"column":70}},"type":"binary-expr","locations":[{"start":{"line":38,"column":17},"end":{"line":38,"column":41}},{"start":{"line":38,"column":45},"end":{"line":38,"column":70}}],"line":38}},"s":{"0":1,"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":5,"8":5,"9":5,"10":1,"11":1,"12":4,"13":1,"14":1,"15":3,"16":2,"17":2,"18":1,"19":1,"20":1,"21":1,"22":1,"23":1,"24":1},"f":{"0":1,"1":4,"2":5},"b":{"0":[1,1],"1":[1,4],"2":[5,1],"3":[1,3],"4":[4,3],"5":[2,1],"6":[3,2]},"inputSourceMap":{"version":3,"file":"/home/usuario/DSI/practica6/ull-esit-inf-dsi-20-21-prct06-generics-solid-ostream07/exercises/src/exercise2/speed.ts","sources":["/home/usuario/DSI/practica6/ull-esit-inf-dsi-20-21-prct06-generics-solid-ostream07/exercises/src/exercise2/speed.ts"],"names":[],"mappings":";;;AAKA;;;;;GAKG;AACH,IAAY,UAKX;AALD,WAAY,UAAU;IACpB,yCAAG,CAAA;IACH,uCAAE,CAAA;IACF,uCAAE,CAAA;IACF,yCAAG,CAAA;AACL,CAAC,EALW,UAAU,GAAV,kBAAU,KAAV,kBAAU,QAKrB;AAAA,CAAC;AAEF;;;;;;GAMG;AACH,MAAa,KAAK;IAChB,gBAAe,CAAC;IAChB,UAAU,CAAC,IAAsC;QAC/C,MAAM,KAAK,GAAW,IAAI,CAAC,CAAC,CAAC,CAAC;QAC9B,IAAI,MAAM,GAAW,CAAC,CAAC;QACvB,IAAI,IAAI,CAAC,CAAC,CAAC,IAAI,UAAU,CAAC,EAAE,IAAI,IAAI,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,CAAC,CAAC,EAAE;YACjD,MAAM,GAAG,KAAK,GAAG,IAAI,CAAC;YACtB,OAAO,MAAM,CAAC;SACf;aAAM,IAAI,IAAI,CAAC,CAAC,CAAC,IAAI,UAAU,CAAC,EAAE,IAAI,IAAI,CAAC,CAAC,CAAC,IAAI,UAAU,CAAC,EAAE,EAAE;YAC/D,MAAM,GAAG,KAAK,GAAG,OAAO,CAAC;YACzB,OAAO,MAAM,CAAC;SACf;aAAM,IAAI,IAAI,CAAC,CAAC,CAAC,IAAI,UAAU,CAAC,EAAE,IAAI,IAAI,CAAC,CAAC,CAAC,IAAI,UAAU,CAAC,GAAG,EAAE;YAChE,MAAM,GAAG,KAAK,GAAG,GAAG,CAAC;YACrB,OAAO,MAAM,CAAC;SACf;aAAM;YACL,OAAO,CAAC,GAAG,CAAC,oDAAoD,CAAC,CAAC;YAClE,OAAO,CAAC,CAAC,CAAC;SACX;IACH,CAAC;CACF;AAnBD,sBAmBC;AAED,MAAM,QAAQ,GAAG,IAAI,KAAK,EAAE,CAAC;AAC7B,QAAQ,CAAC,UAAU,CAAC,CAAC,UAAU,CAAC,GAAG,EAAE,EAAE,EAAE,UAAU,CAAC,EAAE,CAAC,CAAC,CAAC;AACzD,OAAO,CAAC,GAAG,CAAC,qBAAqB,CAAC,CAAC;AACnC,OAAO,CAAC,GAAG,CAAC,mBAAmB,GAAG,QAAQ,CAAC,UAAU,CAAC,CAAC,UAAU,CAAC,GAAG,EAAE,EAAE;IACrD,UAAU,CAAC,EAAE,CAAC,CAAC,GAAG,mBAAmB,CAAC,CAAC","sourcesContent":["/* eslint-disable indent */\n/* eslint-disable max-len */\n/* eslint-disable no-unused-vars */\nimport {isConvertible} from './isConvertible';\n\n/**\n * @param pps Pies por segundo\n * @param ms metros por segundo\n * @param nu nudos por segundo\n * @param kmh kilómetros por segundo\n */\nexport enum SpeedUnits {\n  pps,\n  ms,\n  nu,\n  kmh,\n};\n\n/**\n * @class Speed.\n * @param Recibe un dato tipo T como vector con tres valores, dos unidades\n * de velocidad y un valor\n * @function conversion Convierte el valor de la primera unidad en lo\n * corespondiente a la segunda\n */\nexport class Speed implements isConvertible<[SpeedUnits, number, SpeedUnits]> {\n  constructor() {}\n  conversion(data: [SpeedUnits, number, SpeedUnits]): number {\n    const value: number = data[1];\n    let result: number = 0;\n    if (data[0] == SpeedUnits.ms && data[0] > data[2]) {\n      result = value / 3281;\n      return result;\n    } else if (data[2] == SpeedUnits.ms && data[0] == SpeedUnits.nu) {\n      result = value * 1.94384;\n      return result;\n    } else if (data[2] == SpeedUnits.ms && data[0] == SpeedUnits.kmh) {\n      result = value * 3.6;\n      return result;\n    } else {\n      console.log('Error, la conversión solicitada no está disponible');\n      return -1;\n    }\n  }\n}\n\nconst velocity = new Speed();\nvelocity.conversion([SpeedUnits.kmh, 13, SpeedUnits.ms]);\nconsole.log('Kilómetros hora: 13');\nconsole.log('El resultado es: ' + velocity.conversion([SpeedUnits.kmh, 13,\n                    SpeedUnits.ms]) + ' metros/segundo\\n');\n\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"e1ee0f52d3418cf2a6c6885dd53a53aff3971020","contentHash":"b3109b9894d79ae95a565e9b88991d0b31f8ef2632995fa623da33927819dbbf"},"/home/usuario/DSI/practica6/ull-esit-inf-dsi-20-21-prct06-generics-solid-ostream07/exercises/src/exercise2/strength.ts":{"path":"/home/usuario/DSI/practica6/ull-esit-inf-dsi-20-21-prct06-generics-solid-ostream07/exercises/src/exercise2/strength.ts","statementMap":{"0":{"start":{"line":2,"column":0},"end":{"line":2,"column":62}},"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":50}},"2":{"start":{"line":10,"column":0},"end":{"line":14,"column":74}},"3":{"start":{"line":11,"column":4},"end":{"line":11,"column":48}},"4":{"start":{"line":12,"column":4},"end":{"line":12,"column":48}},"5":{"start":{"line":13,"column":4},"end":{"line":13,"column":52}},"6":{"start":{"line":26,"column":22},"end":{"line":26,"column":29}},"7":{"start":{"line":27,"column":21},"end":{"line":27,"column":22}},"8":{"start":{"line":28,"column":8},"end":{"line":40,"column":9}},"9":{"start":{"line":29,"column":12},"end":{"line":29,"column":35}},"10":{"start":{"line":30,"column":12},"end":{"line":30,"column":26}},"11":{"start":{"line":32,"column":13},"end":{"line":40,"column":9}},"12":{"start":{"line":33,"column":12},"end":{"line":33,"column":36}},"13":{"start":{"line":34,"column":12},"end":{"line":34,"column":26}},"14":{"start":{"line":37,"column":12},"end":{"line":38,"column":65}},"15":{"start":{"line":39,"column":12},"end":{"line":39,"column":22}},"16":{"start":{"line":43,"column":0},"end":{"line":43,"column":28}},"17":{"start":{"line":44,"column":18},"end":{"line":44,"column":32}},"18":{"start":{"line":45,"column":0},"end":{"line":45,"column":63}},"19":{"start":{"line":46,"column":0},"end":{"line":46,"column":25}},"20":{"start":{"line":47,"column":0},"end":{"line":48,"column":42}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":10,"column":1},"end":{"line":10,"column":2}},"loc":{"start":{"line":10,"column":26},"end":{"line":14,"column":1}},"line":10},"1":{"name":"(anonymous_1)","decl":{"start":{"line":24,"column":4},"end":{"line":24,"column":5}},"loc":{"start":{"line":24,"column":18},"end":{"line":24,"column":21}},"line":24},"2":{"name":"(anonymous_2)","decl":{"start":{"line":25,"column":4},"end":{"line":25,"column":5}},"loc":{"start":{"line":25,"column":21},"end":{"line":41,"column":5}},"line":25}},"branchMap":{"0":{"loc":{"start":{"line":14,"column":19},"end":{"line":14,"column":72}},"type":"binary-expr","locations":[{"start":{"line":14,"column":19},"end":{"line":14,"column":40}},{"start":{"line":14,"column":45},"end":{"line":14,"column":71}}],"line":14},"1":{"loc":{"start":{"line":28,"column":8},"end":{"line":40,"column":9}},"type":"if","locations":[{"start":{"line":28,"column":8},"end":{"line":40,"column":9}},{"start":{"line":28,"column":8},"end":{"line":40,"column":9}}],"line":28},"2":{"loc":{"start":{"line":28,"column":12},"end":{"line":28,"column":68}},"type":"binary-expr","locations":[{"start":{"line":28,"column":12},"end":{"line":28,"column":38}},{"start":{"line":28,"column":42},"end":{"line":28,"column":68}}],"line":28},"3":{"loc":{"start":{"line":32,"column":13},"end":{"line":40,"column":9}},"type":"if","locations":[{"start":{"line":32,"column":13},"end":{"line":40,"column":9}},{"start":{"line":32,"column":13},"end":{"line":40,"column":9}}],"line":32},"4":{"loc":{"start":{"line":32,"column":17},"end":{"line":32,"column":75}},"type":"binary-expr","locations":[{"start":{"line":32,"column":17},"end":{"line":32,"column":45}},{"start":{"line":32,"column":49},"end":{"line":32,"column":75}}],"line":32}},"s":{"0":1,"1":1,"2":1,"3":1,"4":1,"5":1,"6":5,"7":5,"8":5,"9":1,"10":1,"11":4,"12":3,"13":3,"14":1,"15":1,"16":1,"17":1,"18":1,"19":1,"20":1},"f":{"0":1,"1":4,"2":5},"b":{"0":[1,1],"1":[1,4],"2":[5,1],"3":[3,1],"4":[4,4]},"inputSourceMap":{"version":3,"file":"/home/usuario/DSI/practica6/ull-esit-inf-dsi-20-21-prct06-generics-solid-ostream07/exercises/src/exercise2/strength.ts","sources":["/home/usuario/DSI/practica6/ull-esit-inf-dsi-20-21-prct06-generics-solid-ostream07/exercises/src/exercise2/strength.ts"],"names":[],"mappings":";;;AAKA;;;;GAIG;AACH,IAAY,aAIX;AAJD,WAAY,aAAa;IACvB,2CAAC,CAAA;IACD,2CAAC,CAAA;IACD,+CAAG,CAAA;AACL,CAAC,EAJW,aAAa,GAAb,qBAAa,KAAb,qBAAa,QAIxB;AAAA,CAAC;AAEF;;;;;;GAMG;AACH,MAAa,QAAQ;IACnB,gBAAe,CAAC;IAChB,UAAU,CAAC,IAA4C;QACrD,MAAM,KAAK,GAAW,IAAI,CAAC,CAAC,CAAC,CAAC;QAC9B,IAAI,MAAM,GAAW,CAAC,CAAC;QACvB,IAAI,IAAI,CAAC,CAAC,CAAC,IAAI,aAAa,CAAC,CAAC,IAAI,IAAI,CAAC,CAAC,CAAC,IAAI,aAAa,CAAC,CAAC,EAAE;YAC5D,MAAM,GAAG,KAAK,GAAG,KAAK,CAAC;YACvB,OAAO,MAAM,CAAC;SACf;aAAM,IAAI,IAAI,CAAC,CAAC,CAAC,IAAI,aAAa,CAAC,GAAG,IAAI,IAAI,CAAC,CAAC,CAAC,IAAI,aAAa,CAAC,CAAC,EAAE;YACrE,MAAM,GAAG,KAAK,GAAG,MAAM,CAAC;YACxB,OAAO,MAAM,CAAC;SACf;aAAM;YACL,OAAO,CAAC,GAAG,CAAC,iDAAiD;gBACzC,+CAA+C,CAAC,CAAC;YACrE,OAAO,CAAC,CAAC,CAAC;SACX;IACH,CAAC;CACF;AAjBD,4BAiBC;AAED,MAAM,SAAS,GAAG,IAAI,QAAQ,EAAE,CAAC;AACjC,SAAS,CAAC,UAAU,CAAC,CAAC,aAAa,CAAC,GAAG,EAAE,EAAE,EAAE,aAAa,CAAC,CAAC,CAAC,CAAC,CAAC;AAC/D,OAAO,CAAC,GAAG,CAAC,WAAW,CAAC,CAAC;AACzB,OAAO,CAAC,GAAG,CAAC,mBAAmB,GAAG,SAAS,CAAC,UAAU,CAAC,CAAC,aAAa,CAAC,GAAG;IACrD,EAAE,EAAE,aAAa,CAAC,CAAC,CAAC,CAAC,GAAG,YAAY,CAAC,CAAC","sourcesContent":["/* eslint-disable indent */\n/* eslint-disable max-len */\n/* eslint-disable no-unused-vars */\nimport {isConvertible} from './isConvertible';\n\n/**\n * @param n newton\n * @param p poundal\n * @param din dina\n */\nexport enum StrengthUnits {\n  n,\n  p,\n  din,\n};\n\n/**\n * @class Strenght.\n * @param Recibe un dato tipo T como vector con tres valores, dos unidades\n * de fuerza y un valor\n * @function conversion Convierte el valor de la primera unidad en lo\n * corespondiente a la segunda\n */\nexport class Strenght implements isConvertible<[StrengthUnits, number, StrengthUnits]> {\n  constructor() {}\n  conversion(data: [StrengthUnits, number, StrengthUnits]): number {\n    const value: number = data[1];\n    let result: number = 0;\n    if (data[0] == StrengthUnits.p && data[2] == StrengthUnits.n) {\n      result = value / 7.233;\n      return result;\n    } else if (data[0] == StrengthUnits.din && data[2] == StrengthUnits.n) {\n      result = value / 100000;\n      return result;\n    } else {\n      console.log('Error, conversor de newtons a otras unidades y ' +\n                          'no se especifican newtons en ningún parámetro');\n      return -1;\n    }\n  }\n}\n\nconst strengths = new Strenght();\nstrengths.conversion([StrengthUnits.din, 15, StrengthUnits.n]);\nconsole.log('Dinas: 30');\nconsole.log('El resultado es: ' + strengths.conversion([StrengthUnits.din,\n                    30, StrengthUnits.n]) + ' newtons\\n');\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"8ba4ae2a2cb81af1ca0a93199066ffa2aa9a090e","contentHash":"462010df42197209f37406e9f733c85d4ff39fc458cf5052b0097e34000549f4"},"/home/usuario/DSI/practica6/ull-esit-inf-dsi-20-21-prct06-generics-solid-ostream07/exercises/src/exercise2/mass.ts":{"path":"/home/usuario/DSI/practica6/ull-esit-inf-dsi-20-21-prct06-generics-solid-ostream07/exercises/src/exercise2/mass.ts","statementMap":{"0":{"start":{"line":2,"column":0},"end":{"line":2,"column":62}},"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":42}},"2":{"start":{"line":15,"column":0},"end":{"line":24,"column":62}},"3":{"start":{"line":16,"column":4},"end":{"line":16,"column":49}},"4":{"start":{"line":17,"column":4},"end":{"line":17,"column":48}},"5":{"start":{"line":18,"column":4},"end":{"line":18,"column":47}},"6":{"start":{"line":19,"column":4},"end":{"line":19,"column":44}},"7":{"start":{"line":20,"column":4},"end":{"line":20,"column":47}},"8":{"start":{"line":21,"column":4},"end":{"line":21,"column":44}},"9":{"start":{"line":22,"column":4},"end":{"line":22,"column":42}},"10":{"start":{"line":23,"column":4},"end":{"line":23,"column":43}},"11":{"start":{"line":36,"column":22},"end":{"line":36,"column":29}},"12":{"start":{"line":37,"column":21},"end":{"line":37,"column":22}},"13":{"start":{"line":38,"column":8},"end":{"line":50,"column":9}},"14":{"start":{"line":39,"column":12},"end":{"line":39,"column":37}},"15":{"start":{"line":40,"column":12},"end":{"line":40,"column":26}},"16":{"start":{"line":42,"column":13},"end":{"line":50,"column":9}},"17":{"start":{"line":43,"column":12},"end":{"line":43,"column":29}},"18":{"start":{"line":44,"column":12},"end":{"line":44,"column":26}},"19":{"start":{"line":47,"column":12},"end":{"line":48,"column":51}},"20":{"start":{"line":49,"column":12},"end":{"line":49,"column":22}},"21":{"start":{"line":53,"column":0},"end":{"line":53,"column":20}},"22":{"start":{"line":54,"column":15},"end":{"line":54,"column":25}},"23":{"start":{"line":55,"column":0},"end":{"line":55,"column":51}},"24":{"start":{"line":56,"column":0},"end":{"line":56,"column":26}},"25":{"start":{"line":57,"column":0},"end":{"line":58,"column":42}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":15,"column":1},"end":{"line":15,"column":2}},"loc":{"start":{"line":15,"column":22},"end":{"line":24,"column":1}},"line":15},"1":{"name":"(anonymous_1)","decl":{"start":{"line":34,"column":4},"end":{"line":34,"column":5}},"loc":{"start":{"line":34,"column":18},"end":{"line":34,"column":21}},"line":34},"2":{"name":"(anonymous_2)","decl":{"start":{"line":35,"column":4},"end":{"line":35,"column":5}},"loc":{"start":{"line":35,"column":21},"end":{"line":51,"column":5}},"line":35}},"branchMap":{"0":{"loc":{"start":{"line":24,"column":15},"end":{"line":24,"column":60}},"type":"binary-expr","locations":[{"start":{"line":24,"column":15},"end":{"line":24,"column":32}},{"start":{"line":24,"column":37},"end":{"line":24,"column":59}}],"line":24},"1":{"loc":{"start":{"line":38,"column":8},"end":{"line":50,"column":9}},"type":"if","locations":[{"start":{"line":38,"column":8},"end":{"line":50,"column":9}},{"start":{"line":38,"column":8},"end":{"line":50,"column":9}}],"line":38},"2":{"loc":{"start":{"line":38,"column":12},"end":{"line":38,"column":77}},"type":"binary-expr","locations":[{"start":{"line":38,"column":12},"end":{"line":38,"column":29}},{"start":{"line":38,"column":33},"end":{"line":38,"column":50}},{"start":{"line":38,"column":54},"end":{"line":38,"column":77}}],"line":38},"3":{"loc":{"start":{"line":42,"column":13},"end":{"line":50,"column":9}},"type":"if","locations":[{"start":{"line":42,"column":13},"end":{"line":50,"column":9}},{"start":{"line":42,"column":13},"end":{"line":50,"column":9}}],"line":42}},"s":{"0":1,"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":1,"9":1,"10":1,"11":5,"12":5,"13":5,"14":4,"15":4,"16":1,"17":0,"18":0,"19":1,"20":1,"21":1,"22":1,"23":1,"24":1,"25":1},"f":{"0":1,"1":4,"2":5},"b":{"0":[1,1],"1":[4,1],"2":[5,2,2],"3":[0,1]},"inputSourceMap":{"version":3,"file":"/home/usuario/DSI/practica6/ull-esit-inf-dsi-20-21-prct06-generics-solid-ostream07/exercises/src/exercise2/mass.ts","sources":["/home/usuario/DSI/practica6/ull-esit-inf-dsi-20-21-prct06-generics-solid-ostream07/exercises/src/exercise2/mass.ts"],"names":[],"mappings":";;;AAKA;;;;;;;;;GASG;AACH,IAAY,SASX;AATD,WAAY,SAAS;IACnB,4CAAa,CAAA;IACb,2CAAY,CAAA;IACZ,0CAAW,CAAA;IACX,uCAAS,CAAA;IACT,0CAAU,CAAA;IACV,uCAAQ,CAAA;IACR,qCAAM,CAAA;IACN,sCAAQ,CAAA;AACV,CAAC,EATW,SAAS,GAAT,iBAAS,KAAT,iBAAS,QASpB;AAAA,CAAC;AAEF;;;;;;GAMG;AACH,MAAa,IAAI;IACf,gBAAe,CAAC;IAChB,UAAU,CAAC,IAAoC;QAC7C,MAAM,KAAK,GAAW,IAAI,CAAC,CAAC,CAAC,CAAC;QAC9B,IAAI,MAAM,GAAW,CAAC,CAAC;QACvB,IAAI,IAAI,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,CAAC,CAAC,IAAI,IAAI,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,CAAC,CAAC,IAAI,IAAI,CAAC,CAAC,CAAC,IAAI,SAAS,CAAC,EAAE,EAAE;YACrE,MAAM,GAAG,IAAI,CAAC,CAAC,CAAC,GAAG,KAAK,CAAC;YACzB,OAAO,MAAM,CAAC;SACf;aAAM,IAAI,IAAI,CAAC,CAAC,CAAC,IAAI,IAAI,CAAC,CAAC,CAAC,EAAE;YAC7B,MAAM,GAAG,IAAI,CAAC,CAAC,CAAC,CAAC;YACjB,OAAO,MAAM,CAAC;SACf;aAAM;YACL,OAAO,CAAC,GAAG,CAAC,mDAAmD;gBACzB,iCAAiC,CAAC,CAAC;YACzE,OAAO,CAAC,CAAC,CAAC;SACX;IACH,CAAC;CACF;AAjBD,oBAiBC;AAED,MAAM,MAAM,GAAG,IAAI,IAAI,EAAE,CAAC;AAC1B,MAAM,CAAC,UAAU,CAAC,CAAC,SAAS,CAAC,CAAC,EAAE,EAAE,EAAE,SAAS,CAAC,EAAE,CAAC,CAAC,CAAC;AACnD,OAAO,CAAC,GAAG,CAAC,YAAY,CAAC,CAAC;AAC1B,OAAO,CAAC,GAAG,CAAC,mBAAmB,GAAG,MAAM,CAAC,UAAU,CAAC,CAAC,SAAS,CAAC,CAAC;IAC5C,EAAE,EAAE,SAAS,CAAC,EAAE,CAAC,CAAC,GAAG,eAAe,CAAC,CAAC","sourcesContent":["/* eslint-disable no-unused-vars */\n/* eslint-disable indent */\n/* eslint-disable max-len */\nimport {isConvertible} from './isConvertible';\n\n/**\n * @param mg miligramos\n * @param cg centigramos\n * @param dg decigramos\n * @param g gramos\n * @param dag decagramos\n * @param hg hectogramos\n * @param km kilogramos\n * @param t tonelada\n */\nexport enum MassUnits {\n  mg = 0.000001,\n  cg = 0.00001,\n  dg = 0.0001,\n  g = 0.001,\n  dag = 0.01,\n  hg = 0.1,\n  kg = 1,\n  t = 1000\n};\n\n/**\n * @class Distancia.\n * @param Recibe un dato tipo T como vector con tres valores, dos unidades\n * de longitud y un valor\n * @function conversion Convierte el valor de la primera unidad en lo\n * corespondiente a la segunda que siempre serán metros\n */\nexport class Mass implements isConvertible<[MassUnits, number, MassUnits]> {\n  constructor() {}\n  conversion(data: [MassUnits, number, MassUnits]): number {\n    const value: number = data[1];\n    let result: number = 0;\n    if (data[0] < data[2] || data[0] > data[2] && data[2] == MassUnits.kg) {\n      result = data[0] * value;\n      return result;\n    } else if (data[0] == data[2]) {\n      result = data[2];\n      return result;\n    } else {\n      console.log('Error, conversor a kilogramos y no se especifican' +\n                                            ' kilogramos en ningún parámetro');\n      return -1;\n    }\n  }\n}\n\nconst masses = new Mass();\nmasses.conversion([MassUnits.g, 97, MassUnits.kg]);\nconsole.log('Gramos: 97');\nconsole.log('El resultado es: ' + masses.conversion([MassUnits.g,\n                    97, MassUnits.kg]) + ' kilogramos\\n');\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"0b5e5c1546969260de9f0028af251cacabfd81d9","contentHash":"6bf44ee2c9b7601b59d1493b14d9069c9576a5d9fb7a4a92db264fa2602beab1"},"/home/usuario/DSI/practica6/ull-esit-inf-dsi-20-21-prct06-generics-solid-ostream07/exercises/src/exercise2/volumn.ts":{"path":"/home/usuario/DSI/practica6/ull-esit-inf-dsi-20-21-prct06-generics-solid-ostream07/exercises/src/exercise2/volumn.ts","statementMap":{"0":{"start":{"line":2,"column":0},"end":{"line":2,"column":62}},"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":46}},"2":{"start":{"line":14,"column":0},"end":{"line":22,"column":68}},"3":{"start":{"line":15,"column":4},"end":{"line":15,"column":51}},"4":{"start":{"line":16,"column":4},"end":{"line":16,"column":55}},"5":{"start":{"line":17,"column":4},"end":{"line":17,"column":52}},"6":{"start":{"line":18,"column":4},"end":{"line":18,"column":46}},"7":{"start":{"line":19,"column":4},"end":{"line":19,"column":53}},"8":{"start":{"line":20,"column":4},"end":{"line":20,"column":54}},"9":{"start":{"line":21,"column":4},"end":{"line":21,"column":57}},"10":{"start":{"line":34,"column":22},"end":{"line":34,"column":29}},"11":{"start":{"line":35,"column":21},"end":{"line":35,"column":22}},"12":{"start":{"line":36,"column":8},"end":{"line":48,"column":9}},"13":{"start":{"line":37,"column":12},"end":{"line":37,"column":37}},"14":{"start":{"line":38,"column":12},"end":{"line":38,"column":26}},"15":{"start":{"line":40,"column":13},"end":{"line":48,"column":9}},"16":{"start":{"line":41,"column":12},"end":{"line":41,"column":29}},"17":{"start":{"line":42,"column":12},"end":{"line":42,"column":26}},"18":{"start":{"line":45,"column":12},"end":{"line":46,"column":55}},"19":{"start":{"line":47,"column":12},"end":{"line":47,"column":22}},"20":{"start":{"line":51,"column":0},"end":{"line":51,"column":24}},"21":{"start":{"line":52,"column":16},"end":{"line":52,"column":28}},"22":{"start":{"line":53,"column":0},"end":{"line":53,"column":57}},"23":{"start":{"line":54,"column":0},"end":{"line":54,"column":37}},"24":{"start":{"line":55,"column":0},"end":{"line":56,"column":47}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":14,"column":1},"end":{"line":14,"column":2}},"loc":{"start":{"line":14,"column":24},"end":{"line":22,"column":1}},"line":14},"1":{"name":"(anonymous_1)","decl":{"start":{"line":32,"column":4},"end":{"line":32,"column":5}},"loc":{"start":{"line":32,"column":18},"end":{"line":32,"column":21}},"line":32},"2":{"name":"(anonymous_2)","decl":{"start":{"line":33,"column":4},"end":{"line":33,"column":5}},"loc":{"start":{"line":33,"column":21},"end":{"line":49,"column":5}},"line":33}},"branchMap":{"0":{"loc":{"start":{"line":22,"column":17},"end":{"line":22,"column":66}},"type":"binary-expr","locations":[{"start":{"line":22,"column":17},"end":{"line":22,"column":36}},{"start":{"line":22,"column":41},"end":{"line":22,"column":65}}],"line":22},"1":{"loc":{"start":{"line":36,"column":8},"end":{"line":48,"column":9}},"type":"if","locations":[{"start":{"line":36,"column":8},"end":{"line":48,"column":9}},{"start":{"line":36,"column":8},"end":{"line":48,"column":9}}],"line":36},"2":{"loc":{"start":{"line":36,"column":12},"end":{"line":36,"column":79}},"type":"binary-expr","locations":[{"start":{"line":36,"column":12},"end":{"line":36,"column":29}},{"start":{"line":36,"column":33},"end":{"line":36,"column":50}},{"start":{"line":36,"column":54},"end":{"line":36,"column":79}}],"line":36},"3":{"loc":{"start":{"line":40,"column":13},"end":{"line":48,"column":9}},"type":"if","locations":[{"start":{"line":40,"column":13},"end":{"line":48,"column":9}},{"start":{"line":40,"column":13},"end":{"line":48,"column":9}}],"line":40}},"s":{"0":1,"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":1,"9":1,"10":5,"11":5,"12":5,"13":4,"14":4,"15":1,"16":0,"17":0,"18":1,"19":1,"20":1,"21":1,"22":1,"23":1,"24":1},"f":{"0":1,"1":4,"2":5},"b":{"0":[1,1],"1":[4,1],"2":[5,4,4],"3":[0,1]},"inputSourceMap":{"version":3,"file":"/home/usuario/DSI/practica6/ull-esit-inf-dsi-20-21-prct06-generics-solid-ostream07/exercises/src/exercise2/volumn.ts","sources":["/home/usuario/DSI/practica6/ull-esit-inf-dsi-20-21-prct06-generics-solid-ostream07/exercises/src/exercise2/volumn.ts"],"names":[],"mappings":";;;AAKA;;;;;;;;GAQG;AACH,IAAY,WAQX;AARD,WAAY,WAAW;IACrB,8CAAiB,CAAA;IACjB,kDAAc,CAAA;IACd,+CAAW,CAAA;IACX,yCAAM,CAAA;IACN,gDAAW,CAAA;IACX,iDAAa,CAAA;IACb,oDAAgB,CAAA;AAClB,CAAC,EARW,WAAW,GAAX,mBAAW,KAAX,mBAAW,QAQtB;AAAA,CAAC;AAEF;;;;;;GAMG;AACH,MAAa,MAAM;IACjB,gBAAe,CAAC;IAChB,UAAU,CAAC,IAAwC;QACjD,MAAM,KAAK,GAAW,IAAI,CAAC,CAAC,CAAC,CAAC;QAC9B,IAAI,MAAM,GAAW,CAAC,CAAC;QACvB,IAAI,IAAI,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,CAAC,CAAC,IAAI,IAAI,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,CAAC,CAAC,IAAI,IAAI,CAAC,CAAC,CAAC,IAAI,WAAW,CAAC,EAAE,EAAE;YACvE,MAAM,GAAG,IAAI,CAAC,CAAC,CAAC,GAAG,KAAK,CAAC;YACzB,OAAO,MAAM,CAAC;SACf;aAAM,IAAI,IAAI,CAAC,CAAC,CAAC,IAAI,IAAI,CAAC,CAAC,CAAC,EAAE;YAC7B,MAAM,GAAG,IAAI,CAAC,CAAC,CAAC,CAAC;YACjB,OAAO,MAAM,CAAC;SACf;aAAM;YACL,OAAO,CAAC,GAAG,CAAC,uDAAuD;gBACjC,qCAAqC,CAAC,CAAC;YACzE,OAAO,CAAC,CAAC,CAAC;SACX;IACH,CAAC;CACF;AAjBD,wBAiBC;AAED,MAAM,OAAO,GAAG,IAAI,MAAM,EAAE,CAAC;AAC7B,OAAO,CAAC,UAAU,CAAC,CAAC,WAAW,CAAC,GAAG,EAAE,CAAC,EAAE,WAAW,CAAC,EAAE,CAAC,CAAC,CAAC;AACzD,OAAO,CAAC,GAAG,CAAC,uBAAuB,CAAC,CAAC;AACrC,OAAO,CAAC,GAAG,CAAC,mBAAmB,GAAG,OAAO,CAAC,UAAU,CAAC,CAAC,WAAW,CAAC,GAAG;IACjD,CAAC,EAAE,WAAW,CAAC,EAAE,CAAC,CAAC,GAAG,mBAAmB,CAAC,CAAC","sourcesContent":["/* eslint-disable no-unused-vars */\n/* eslint-disable indent */\n/* eslint-disable max-len */\nimport {isConvertible} from './isConvertible';\n\n/**\n * @param mm3 milímetros cúbicos\n * @param cm3 centímetros cúbicos\n * @param dm3 decímetros cúbicos\n * @param mm3 metros cúbicos\n * @param dam3 decámetros cúbicos\n * @param hm3 hectómetros cúbicos\n * @param km3 kilómetros cúbicos\n */\nexport enum VolumnUnits {\n  mm3 = 0.000000001,\n  cm3 = 0.000001,\n  dm3 = 0.001,\n  m3 = 1,\n  dam3 = 1000,\n  hm3 = 1000000,\n  km3 = 1000000000,\n};\n\n/**\n * @class Volumn.\n * @param Recibe un dato tipo T como vector con tres valores, dos unidades\n * de volúmenes y un valor\n * @function conversion Convierte el valor de la primera unidad en lo\n * corespondiente a la segunda que siempre serán metros\n */\nexport class Volumn implements isConvertible<[VolumnUnits, number, VolumnUnits]> {\n  constructor() {}\n  conversion(data: [VolumnUnits, number, VolumnUnits]): number {\n    const value: number = data[1];\n    let result: number = 0;\n    if (data[0] < data[2] || data[0] > data[2] && data[2] == VolumnUnits.m3) {\n      result = data[0] * value;\n      return result;\n    } else if (data[0] == data[2]) {\n      result = data[2];\n      return result;\n    } else {\n      console.log('Error, conversor a metros cúbicos y no se especifican' +\n                                        ' metros cúbicos en ningún parámetro');\n      return -1;\n    }\n  }\n}\n\nconst volumns = new Volumn();\nvolumns.conversion([VolumnUnits.km3, 2, VolumnUnits.m3]);\nconsole.log('Kilometros cúbicos: 2');\nconsole.log('El resultado es: ' + volumns.conversion([VolumnUnits.km3,\n                    2, VolumnUnits.m3]) + ' metros cúbicos\\n');\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"3967aed1c24402385aad8cfa9fb451390ea2f682","contentHash":"802fc7fcb8254d8e6cabeb13a0854aae044edf339236e8852aaa0912ed767d05"}}